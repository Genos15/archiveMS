enum BankCardIssuer {
    VISA
    MASTERCARD
    DISCOVERY
    AMERICAN_EXPRESS
}

type BankCard {
    id: UUID!
    owner: String!
    bcNumber: String!
    bcExpiredAt: DateTime!
    bcCvc: String!
    issuer: BankCardIssuer
}

type SessionToken {
    id: UUID!
    accessToken: UUID!
    refreshToken: UUID!
    expiredIn: Long!
    verified: Boolean
    lang: String
    longitude: Float
    latitude: Float
}

type Provider {
    id: UUID!
    name: String!
    type: ProvidersType!
    marks: [String]!
    logo: UUID
}

type Card {
    id: UUID!
    number: String!
    expiredMonth: Int!
    expiredYear: Int!
    name: String!
}

interface User {
    id: UUID!
    name: String!
    email: String!
    phone: String!
    isPhoneVerified: Boolean!
    isEmailVerified: Boolean!
}

type Operator implements User {
    id: UUID!
    name: String!
    email: String!
    phone: String!
    isPhoneVerified: Boolean!
    isEmailVerified: Boolean!
    country: Country
}

type Customer implements User {
    id: UUID!
    name: String!
    country: String
    city: String
    addressLine: String
    postalCode: String
    state: String
    email: String!
    phone: String!
    isPhoneVerified: Boolean!
    isEmailVerified: Boolean!
}

union AnyUser = Operator | Customer

type Country {
    id: UUID!
    unicode: String!
    flag: String!
    iso: String!
    nameEn: String!
    nameFr: String
    modes: [Mode]!
}

type Mode {
    id: UUID!
    name: String!
    country: Country!
    marks: [String]
    logo: UUID
}

type Receiver {
    id: UUID!
    name: String!
    phone: String!
}

type Currency {
    id: UUID!
}

enum TransactionType {
    GMS
    BANK
}

# source (https://docs.mpay24.com/docs/transaction-states)
enum TransactionState {
    #The payout was successful. The amount will be transferred to the customer
    WITHDRAWN
    #The transaction failed upon the last request
    FAILED
    SUSPENDED
    COMMITTED
    TERMINATED
}

type Transaction {
    type: TransactionType
    receiver: Receiver
    amount: Long!
    card: Long!
    commission: Long!
    currency: Long!
    sentAt: DateTime! #format -> 2020-12-09T16:09:53-00:00
    receivedAt: DateTime! #format -> 2020-12-09T16
    publicId: String
    state: TransactionState
}

type JwtToken {
    accessToken: String!
    refreshToken: String!
    expiredAt: Long!
}